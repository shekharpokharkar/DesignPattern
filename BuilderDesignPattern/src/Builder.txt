 Builder Design Pattern – Key Notes for Revision
✅ 1. Definition
The Builder pattern is a creational design pattern used to construct a complex object step-by-step. It separates the construction of an object from its representation.

✅ 2. When to Use
When the object has many optional parameters.

When object construction is complicated and requires step-by-step building.

When you want to avoid constructor telescoping (many overloaded constructors).

✅ 3. Key Participants
Component	Role
Product	The complex object being built (e.g., Dog, Computer)
Builder	The inner static class used to set fields fluently
Director (optional)	Controls the building process (used more in classic form)
Client	Calls builder methods to construct the object

✅ 4. Benefits
Improves readability and code maintenance.

Helps in creating immutable objects.

Avoids the need for multiple constructors.

Allows different representations of the same object.