ðŸ§  Singleton Design Pattern â€“ Key Notes for Revision
âœ… 1. Definition
The Singleton pattern ensures that only one instance of a class is created and provides a global point of access to it.

âœ… 2. Use Cases
Logging

Configuration settings

Caches

Thread pools

Database connections

Registry or factories

âœ… 3. Key Features
Private constructor

Static instance of the class

Global access method (getInstance())

âœ… 4. Types of Singleton Implementations
Type	Description
Eager Initialization	Instance created at class loading time
Lazy Initialization	Instance created when needed (on first call to getInstance())
Thread-Safe Singleton	Uses synchronized or double-checked locking for multi-threaded safety
Bill Pugh Singleton	Uses inner static helper class for lazy & thread-safe instantiation
Enum Singleton	Best and simplest; prevents reflection, cloning, serialization issues

âœ… 5. Common Pitfalls and Fixes
Problem	Fix
Multithreading	Use synchronized, volatile, or static inner class
Serialization	Implement readResolve() method
Cloning	Override clone() to throw exception
Reflection	Throw exception in constructor if instance already exists